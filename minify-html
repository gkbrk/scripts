#!/usr/bin/env python3
from bs4 import BeautifulSoup, NavigableString, Comment
import sys
from pathlib import Path

def out(*t):
    for x in t:
        f.write(x)

def htmlentities(s):
    s = s.replace("&", "&amp;")
    s = s.replace("<", "&lt;")
    s = s.replace(">", "&gt;")
    return s

def output_elem(tag, ws=False, escape=False):
    if isinstance(tag, Comment):
        return
    if isinstance(tag, NavigableString):
        s = tag.string

        if escape:
            s = htmlentities(s)
        if ws:
            out(s)
            return
        
        s = s.replace("\n", " ")

        new = ""
        while new != s:
            new = s
            s = new.replace("  ", " ")
        out(new)
        return

    out("<", tag.name)

    for attr in sorted(tag.attrs):
        x = tag.attrs[attr]
        if isinstance(x, list):
            x = " ".join(x)
        out(" ", attr, '="', htmlentities(x), '"')
    if not list(tag.children) and tag.name in ["meta", "input", "br", "hr", "link"]:
        out("/>")
        return
    out(">")

    for ch in tag.children:
        output_elem(ch, ws or tag.name in ["textarea", "script", "style", "pre"], tag.name not in ["script", "style"])

    out("</", tag.name, ">")

for p in sys.argv[1:]:
    print(f"Minifying {p}...")
    try:
        with Path(p).open("r") as f:
            soup = BeautifulSoup(f.read(), "html.parser")
            with Path(p).open("w") as f:
                out("<!DOCTYPE html>")
                output_elem(soup.html)
    except:
        pass
